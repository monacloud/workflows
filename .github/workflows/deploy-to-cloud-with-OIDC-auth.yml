
name: Deploy to Cloud with OIDC auth

on:
  workflow_call:
    inputs:
      tag:
        description: The tag to deploy
        required: true
        type: string
        default: 'latest'
      cloud:
        description: Cloud environment to deploy to
        required: true
        type: string
        default: 'all'
    secrets:
      AZURE_KUBECONFIG:
        required: true
      CLUSTER_NAME:
        required: true
      CLOUDFLARE_TOKEN:
        required: true
      CLOUDFLARE_ZONE_ID:
        required: true

jobs:
            
  deploy-azure:
    if: contains(inputs.cloud, 'azure') || inputs.cloud == 'all'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    environment:
      name: azure
      url: http://azure.monacloud.mvkaran.net
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: OIDC login to Azure
        uses: azure/login@v1
        with:
          client-id: 'e49383ea-a137-4d83-b0bc-d8c673befb81'
          tenant-id: '1729d13d-789d-4bfa-86e8-64667377ba55'
          subscription-id: '885a6789-5720-4c74-8568-101fb7e8e2fe'
        
      - name: Set context from Kubeconfig
        uses: azure/k8s-set-context@v1
        id: setcontext
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.AZURE_KUBECONFIG }} 
          context: ${{ secrets.CLUSTER_NAME }}          

      - name: Get new container image tag
        id: image-tag
        env:
          GIT_TAG_NAME: ${{ inputs.tag }}
        run: |
          echo "::set-output name=image::ghcr.io/$GITHUB_REPOSITORY:$GIT_TAG_NAME"
      
      - name: Deploy to Kubernetes
        uses: Azure/k8s-deploy@v1
        with:
          manifests: |
            k8s.yaml
          images: |
            ${{ steps.image-tag.outputs.image }}
            
      - name: Get service ingress IP address
        run: |
            echo "SVC_INGRESS_IP=$(kubectl get svc monacloud-svc -o jsonpath='{.status.loadBalancer.ingress[0].ip}')" >> $GITHUB_ENV

      - name: Update Cloudflare DNS records
        uses: rez0n/create-dns-record@v2.1
        with:
          type: "A"
          name: "azure.monacloud.mvkaran.net"
          content: ${{ env.SVC_INGRESS_IP }}
          ttl: 1
          proxied: false
          token: ${{ secrets.CLOUDFLARE_TOKEN }}
          zone: ${{ secrets.CLOUDFLARE_ZONE_ID }}

        

  deploy-aws:
    if: contains(inputs.cloud, 'aws') || inputs.cloud == 'all'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    environment:
      name: aws
      url: http://aws.monacloud.mvkaran.net

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::756877124396:role/GitHubActionsOIDC
          aws-region: us-east-1

      - name: Set Kubeconfig
        env:
            CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
        run: |
         aws eks --region us-east-1 update-kubeconfig --name "$CLUSTER_NAME" 

      - name: Get new container image tag
        id: image-tag
        env:
          GIT_TAG_NAME: ${{ inputs.tag }}
        run: |
          echo "::set-output name=image::ghcr.io/$GITHUB_REPOSITORY:$GIT_TAG_NAME"
      
      - name: Deploy to Kubernetes
        uses: Azure/k8s-deploy@v1
        with:
          manifests: |
            k8s.yaml
          images: |
            ${{ steps.image-tag.outputs.image }}

      - name: Get service ingress hostname
        run: |
            echo "SVC_INGRESS_HOSTNAME=$(kubectl get svc monacloud-svc -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')" >> $GITHUB_ENV

      - name: Update Cloudflare DNS records
        uses: rez0n/create-dns-record@v2.1
        with:
          type: "CNAME"
          name: "aws.monacloud.mvkaran.net"
          content: ${{ env.SVC_INGRESS_HOSTNAME }}
          ttl: 1
          proxied: false
          token: ${{ secrets.CLOUDFLARE_TOKEN }}
          zone: ${{ secrets.CLOUDFLARE_ZONE_ID }}

  deploy-gcp:
    if: contains(inputs.cloud, 'gcp') || inputs.cloud == 'all'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    environment:
      name: gcp
      url: http://gcp.monacloud.mvkaran.net

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: OIDC login to GCP
        id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          workload_identity_provider: 'projects/956637891945/locations/global/workloadIdentityPools/github-actions/providers/github'
          service_account: 'github-actions@monacloud.iam.gserviceaccount.com'

      - name: Get GKE credentials
        id: get-credentials
        uses: google-github-actions/get-gke-credentials@main
        with:
          cluster_name: ${{ secrets.CLUSTER_NAME }}
          location: us-central1

      - name: Get new container image tag
        id: image-tag
        env:
          GIT_TAG_NAME: ${{ inputs.tag }}
        run: |
          echo "::set-output name=image::ghcr.io/$GITHUB_REPOSITORY:$GIT_TAG_NAME"
      
      - name: Deploy to Kubernetes
        uses: Azure/k8s-deploy@v1
        with:
          manifests: |
            k8s.yaml
          images: |
            ${{ steps.image-tag.outputs.image }}
      
      - name: Get service ingress IP address
        run: |
            echo "SVC_INGRESS_IP=$(kubectl get svc monacloud-svc -o jsonpath='{.status.loadBalancer.ingress[0].ip}')" >> $GITHUB_ENV

      - name: Update Cloudflare DNS records
        uses: rez0n/create-dns-record@v2.1
        with:
          type: "A"
          name: "gcp.monacloud.mvkaran.net"
          content: ${{ env.SVC_INGRESS_IP }}
          ttl: 1
          proxied: false
          token: ${{ secrets.CLOUDFLARE_TOKEN }}
          zone: ${{ secrets.CLOUDFLARE_ZONE_ID }}
